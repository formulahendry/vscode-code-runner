{
  "name": "code-runner",
  "displayName": "Code Runner",
  "description": "Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Objective-C, Rust, Racket, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D",
  "version": "0.6.28",
  "publisher": "formulahendry",
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.6.0"
  },
  "categories": [
    "Languages",
    "Other"
  ],
  "keywords": [
    "javascript",
    "php",
    "python",
    "perl",
    "ruby"
  ],
  "bugs": {
    "url": "https://github.com/formulahendry/vscode-code-runner/issues",
    "email": "formulahendry@gmail.com"
  },
  "homepage": "https://github.com/formulahendry/vscode-code-runner/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/formulahendry/vscode-code-runner.git"
  },
  "activationEvents": [
    "onCommand:code-runner.run",
    "onCommand:code-runner.runCustomCommand",
    "onCommand:code-runner.runByLanguage"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "code-runner.run",
        "title": "Run Code",
        "icon": {
        	"light": "./images/run-light.png",
        	"dark": "./images/run-dark.png"
        }
      },
      {
        "command": "code-runner.runCustomCommand",
        "title": "Run Custom Command"
      },
      {
        "command": "code-runner.runByLanguage",
        "title": "Run By Language"
      },
      {
        "command": "code-runner.stop",
        "title": "Stop Code Run"
      }
    ],
    "keybindings": [
      {
        "command": "code-runner.run",
        "key": "ctrl+alt+n"
      },
      {
        "command": "code-runner.runCustomCommand",
        "key": "ctrl+alt+k"
      },
      {
        "command": "code-runner.runByLanguage",
        "key": "ctrl+alt+j"
      },
      {
        "command": "code-runner.stop",
        "key": "ctrl+alt+m"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "!inOutput",
          "command": "code-runner.run",
          "group": "navigation"
        },
        {
          "when": "inOutput",
          "command": "code-runner.stop",
          "group": "stop-code-run"
        }
      ],
      "editor/title": [
        {
          "when": "config.code-runner.showRunIconInEditorTitleMenu",
          "command": "code-runner.run",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Run Code configuration",
      "properties": {
        "code-runner.executorMap": {
          "type": "object",
          "default": {
            "javascript": "node",
            "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
            "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "php": "php",
            "python": "python",
            "perl": "perl",
            "ruby": "ruby",
            "go": "go run",
            "lua": "lua",
            "groovy": "groovy",
            "powershell": "powershell -ExecutionPolicy ByPass -File",
            "bat": "cmd /c",
            "shellscript": "bash",
            "fsharp": "fsi",
            "csharp": "scriptcs",
            "vbscript": "cscript //Nologo",
            "typescript": "ts-node",
            "coffeescript": "coffee",
            "scala": "scala",
            "swift": "swift",
            "julia": "julia",
            "crystal": "crystal",
            "ocaml": "ocaml",
            "r": "Rscript",
            "applescript": "osascript",
            "clojure": "lein exec",
            "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
            "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
            "racket": "racket",
            "ahk": "autohotkey",
            "autoit": "autoit3",
            "kotlin": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
            "dart": "dart",
            "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
            "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
            "haskell": "runhaskell",
            "nim": "nim compile --verbosity:0 --hints:off --run"
          },
          "description": "Set the executor of each language."
        },
        "code-runner.executorMapByFileExtension": {
          "type": "object",
          "default": {
            ".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",
            ".vbs": "cscript //Nologo",
            ".scala": "scala",
            ".jl": "julia",
            ".cr": "crystal",
            ".ml": "ocaml",
            ".exs": "elixir",
            ".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
            ".rkt": "racket",
            ".ahk": "autohotkey",
            ".au3": "autoit3",
            ".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
            ".kts": "kotlinc -script",
            ".dart": "dart",
            ".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
            ".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
            ".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
            ".hs": "runhaskell",
            ".nim": "nim compile --verbosity:0 --hints:off --run"
          },
          "description": "Set the executor of each file extension."
        },
        "code-runner.customCommand": {
          "type": "string",
          "default": "echo Hello",
          "description": "Set the custom command to run."
        },
        "code-runner.languageIdToFileExtensionMap": {
          "type": "object",
          "default": {
            "bat": ".bat",
            "powershell": ".ps1"
          },
          "description": "Set the mapping of languageId to file extension."
        },
        "code-runner.defaultLanguage": {
          "type": "string",
          "default": "",
          "description": "Set the default language to run."
        },
        "code-runner.cwd": {
          "type": "string",
          "default": "",
          "description": "Set the working directory."
        },
        "code-runner.fileDirectoryAsCwd": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use the directory of the file to be executed as the working directory."
        },
        "code-runner.clearPreviousOutput": {
          "type": "boolean",
          "default": false,
          "description": "Whether to clear previous output before each run."
        },
        "code-runner.saveAllFilesBeforeRun": {
          "type": "boolean",
          "default": false,
          "description": "Whether to save all files before running."
        },
        "code-runner.saveFileBeforeRun": {
          "type": "boolean",
          "default": false,
          "description": "Whether to save the current file before running."
        },
        "code-runner.enableAppInsights": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable AppInsights to track user telemetry data."
        },
        "code-runner.showExecutionMessage": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show extra execution message like [Running] ... and [Done] ..."
        },
        "code-runner.runInTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Whether to run code in Integrated Terminal."
        },
        "code-runner.preserveFocus": {
          "type": "boolean",
          "default": true,
          "description": "Whether to preserve focus on code editor after code run is triggered."
        },
        "code-runner.ignoreSelection": {
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore selection to always run entire file."
        },
        "code-runner.showRunIconInEditorTitleMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show 'Run Code' icon in editor title menu."
        }
      }
    },
    "languages": [
      {
        "id": "code-runner-output",
        "mimetypes": [
          "text/x-code-output"
        ]
      }
    ],
    "grammars": [
      {
        "language": "code-runner-output",
        "scopeName": "code-runner.output",
        "path": "./syntaxes/code-runner-output.tmLanguage"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "node ./node_modules/vscode/bin/compile",
    "compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "dependencies": {
    "applicationinsights": "^0.19.0",
    "tree-kill": "^1.1.0"
  },
  "devDependencies": {
    "typescript": "^1.8.5",
    "vscode": "^0.11.0"
  }
}
